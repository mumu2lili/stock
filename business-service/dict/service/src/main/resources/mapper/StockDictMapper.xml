<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.piggy.stock.dict.dao.StockDictMapper">
	<resultMap id="BaseResultMap" type="com.piggy.stock.dict.domain.StockDict">
		<id column="id" property="id" jdbcType="BIGINT" />
		<result column="exchange" property="exchange" jdbcType="VARCHAR" />
		<result column="board" property="board" jdbcType="VARCHAR" />
		<result column="code" property="code" jdbcType="VARCHAR" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="ename" property="ename" jdbcType="VARCHAR" />
		<result column="listing_date" property="listingDate" jdbcType="DATE" />
		<result column="status" property="status" jdbcType="VARCHAR" />
	</resultMap>
	<sql id="Base_Column_List">
		id, exchange, board, code, name, ename, listing_date,
		status
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Long">
		select
		<include refid="Base_Column_List" />
		from stock_dict
		where id = #{id,jdbcType=BIGINT}
	</select>
	<select id="select" resultMap="BaseResultMap"
		parameterType="java.lang.Long">
		select
		<include refid="Base_Column_List" />
		from stock_dict
		where 1 = 1
		<if test="id != null">
			and id = #{id,jdbcType=BIGINT}
		</if>
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from
		stock_dict
		where id = #{id,jdbcType=BIGINT}
	</delete>
	<insert id="insert" parameterType="com.piggy.stock.dict.domain.StockDict">
		insert into stock_dict (id,
		exchange, board,
		code, name, ename,
		listing_date, status)
		values
		(#{id,jdbcType=BIGINT}, #{exchange,jdbcType=VARCHAR},
		#{board,jdbcType=VARCHAR},
		#{code,jdbcType=VARCHAR},
		#{name,jdbcType=VARCHAR}, #{ename,jdbcType=VARCHAR},
		#{listingDate,jdbcType=DATE}, #{status,jdbcType=VARCHAR})
	</insert>
	<insert id="insertSelective" parameterType="com.piggy.stock.dict.domain.StockDict">
		insert into stock_dict
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="exchange != null">
				exchange,
			</if>
			<if test="board != null">
				board,
			</if>
			<if test="code != null">
				code,
			</if>
			<if test="name != null">
				name,
			</if>
			<if test="ename != null">
				ename,
			</if>
			<if test="listingDate != null">
				listing_date,
			</if>
			<if test="status != null">
				status,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=BIGINT},
			</if>
			<if test="exchange != null">
				#{exchange,jdbcType=VARCHAR},
			</if>
			<if test="board != null">
				#{board,jdbcType=VARCHAR},
			</if>
			<if test="code != null">
				#{code,jdbcType=VARCHAR},
			</if>
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="ename != null">
				#{ename,jdbcType=VARCHAR},
			</if>
			<if test="listingDate != null">
				#{listingDate,jdbcType=DATE},
			</if>
			<if test="status != null">
				#{status,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.piggy.stock.dict.domain.StockDict">
		update stock_dict
		<set>
			<if test="exchange != null">
				exchange = #{exchange,jdbcType=VARCHAR},
			</if>
			<if test="board != null">
				board = #{board,jdbcType=VARCHAR},
			</if>
			<if test="code != null">
				code = #{code,jdbcType=VARCHAR},
			</if>
			<if test="name != null">
				name = #{name,jdbcType=VARCHAR},
			</if>
			<if test="ename != null">
				ename = #{ename,jdbcType=VARCHAR},
			</if>
			<if test="listingDate != null">
				listing_date = #{listingDate,jdbcType=DATE},
			</if>
			<if test="status != null">
				status = #{status,jdbcType=VARCHAR},
			</if>
		</set>
		where id = #{id,jdbcType=BIGINT}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.piggy.stock.dict.domain.StockDict">
		update stock_dict
		set exchange = #{exchange,jdbcType=VARCHAR},
		board =
		#{board,jdbcType=VARCHAR},
		code = #{code,jdbcType=VARCHAR},
		name =
		#{name,jdbcType=VARCHAR},
		ename = #{ename,jdbcType=VARCHAR},
		listing_date = #{listingDate,jdbcType=DATE},
		status =
		#{status,jdbcType=VARCHAR}
		where id = #{id,jdbcType=BIGINT}
	</update>
</mapper>